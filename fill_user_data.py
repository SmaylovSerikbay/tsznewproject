#!/usr/bin/env python
import os
import sys
import django
import random
from datetime import datetime, timedelta
from decimal import Decimal

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tsz2.settings')
django.setup()

from main.models import User, City, ServiceType, Order, Portfolio, Tariff, BusyDate, Review, OrderResponse

def fill_user_data():
    print("üéØ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è +77085446945...")
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User.objects.filter(phone_number='+77085446945').first()
    if not user:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–º–µ—Ä–æ–º +77085446945 –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_full_name()} ({user.user_type})")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —Ç–∏–ø—ã —É—Å–ª—É–≥
    cities = list(City.objects.filter(is_active=True))
    service_types = list(ServiceType.objects.filter(is_active=True))
    
    if not cities or not service_types:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –≥–æ—Ä–æ–¥–æ–≤ –∏–ª–∏ —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
        return
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å, —Å–æ–∑–¥–∞–µ–º –¥–ª—è –Ω–µ–≥–æ –¥–∞–Ω–Ω—ã–µ
    if user.user_type == 'performer':
        print("üë§ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è...")
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (15 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π)
        print("üì∏ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ...")
        portfolio_photos = [
            'portfolio/customer_portfolio_1.jpg',
            'portfolio/customer_portfolio_2.jpg',
            'portfolio/ChatGPT_Image_16_–∞–ø—Ä._2025_–≥._14_11_02.png',
            'portfolio/customer_portfolio_3.jpg',
            'portfolio/customer_portfolio_4.jpg',
            'portfolio/customer_portfolio_5.jpg',
            'portfolio/customer_portfolio_6.jpg',
            'portfolio/customer_portfolio_7.jpg',
            'portfolio/customer_portfolio_8.jpg',
            'portfolio/customer_portfolio_9.jpg',
            'portfolio/customer_portfolio_10.jpg',
            'portfolio/customer_portfolio_11.jpg',
            'portfolio/customer_portfolio_12.jpg',
            'portfolio/customer_portfolio_13.jpg',
            'portfolio/customer_portfolio_14.jpg',
        ]
        
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
        Portfolio.objects.filter(user=user).delete()
        
        for i, photo_path in enumerate(portfolio_photos):
            try:
                Portfolio.objects.create(
                    user=user,
                    image=photo_path
                )
            except:
                # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                Portfolio.objects.create(
                    user=user
                )
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞—Ä–∏—Ñ—ã (5 —Ç–∞—Ä–∏—Ñ–æ–≤)
        print("üí∞ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤...")
        tariff_names = [
            '–ë–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç',
            '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞–∫–µ—Ç', 
            '–ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç',
            'VIP –ø–∞–∫–µ—Ç',
            '–°–≤–∞–¥–µ–±–Ω—ã–π –ø–∞–∫–µ—Ç'
        ]
        
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞—Ä–∏—Ñ—ã
        Tariff.objects.filter(user=user).delete()
        
        for i, name in enumerate(tariff_names):
            Tariff.objects.create(
                user=user,
                name=name,
                price=Decimal(50000 + i * 25000),
                description=f'–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞ "{name}". –í–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —Å—ä–µ–º–∫—É, –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –±–∞–∑–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.'
            )
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–Ω—è—Ç—ã–µ –¥–∞—Ç—ã (10 –¥–∞—Ç)
        print("üìÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞—Ç...")
        BusyDate.objects.filter(user=user).delete()
        
        busy_dates = []
        for i in range(10):
            date = datetime.now().date() + timedelta(days=random.randint(1, 60))
            if date not in busy_dates:
                BusyDate.objects.create(
                    user=user,
                    date=date
                )
                busy_dates.append(date)
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç–∑—ã–≤—ã (8 –æ—Ç–∑—ã–≤–æ–≤)
        print("‚≠ê –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤...")
        Review.objects.filter(to_user=user).delete()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
        customer = User.objects.filter(user_type='customer').first()
        if not customer:
            customer = User.objects.create_user(
                username='test_customer_for_reviews',
                email='customer_reviews@test.com',
                password='testpass123',
                phone_number='+77776543210',
                first_name='–ú–∞—Ä–∏—è',
                last_name='–ò–≤–∞–Ω–æ–≤–∞',
                user_type='customer',
                city=random.choice(cities)
            )
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
        review_orders = []
        for i in range(8):
            order = Order.objects.create(
                customer=customer,
                performer=user,
                title=f'–ó–∞–∫–∞–∑ –¥–ª—è –æ—Ç–∑—ã–≤–∞ #{i+1}',
                event_type=random.choice(['wedding', 'birthday', 'corporate', 'anniversary']),
                event_date=datetime.now().date() - timedelta(days=random.randint(1, 30)),
                venue=f'–†–µ—Å—Ç–æ—Ä–∞–Ω "{random.choice(["–ó–æ–ª–æ—Ç–æ–π", "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π", "–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç"])}"',
                guest_count=random.randint(20, 100),
                description=f'–ó–∞–∫–∞–∑ –¥–ª—è –æ—Ç–∑—ã–≤–∞ #{i+1}. –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ.',
                budget_min=Decimal(50000 + random.randint(0, 50000)),
                budget_max=Decimal(150000 + random.randint(0, 50000)),
                city=random.choice(cities).name,
                services=[user.service_type.code] if user.service_type else [],
                status='completed',
                order_type='booking'
            )
            review_orders.append(order)
        
        review_texts = [
            '–û—Ç–ª–∏—á–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å! –í—Å–µ –±—ã–ª–æ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.',
            '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞. –†–µ–∫–æ–º–µ–Ω–¥—É—é!',
            '–û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º. –°–ø–∞—Å–∏–±–æ!',
            '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –≤—Å–µ –≤ —Å—Ä–æ–∫.',
            '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ, –∫—Ä–∞—Å–∏–≤—ã–µ —Å–Ω–∏–º–∫–∏.',
            '–í–µ–∂–ª–∏–≤—ã–π –∏ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.',
            '–í—Å–µ –ø—Ä–æ—à–ª–æ –∏–¥–µ–∞–ª—å–Ω–æ, —Å–ø–∞—Å–∏–±–æ!',
            '–û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥.'
        ]
        
        for i in range(8):
            Review.objects.create(
                from_user=customer,
                to_user=user,
                order=review_orders[i],
                rating=random.randint(4, 5),
                comment=review_texts[i % len(review_texts)]
            )
        
        # –°–æ–∑–¥–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã (3 –∑–∞–∫–∞–∑–∞)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤...")
        active_order_titles = [
            '–°–≤–∞–¥—å–±–∞ –ï–ª–µ–Ω—ã –∏ –î–º–∏—Ç—Ä–∏—è',
            '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ IT-–∫–æ–º–ø–∞–Ω–∏–∏',
            '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –º–∞–º—ã'
        ]
        
        event_types = ['wedding', 'birthday', 'corporate', 'anniversary', 'graduation', 'proposal', 'family', 'holiday']
        
        for i, title in enumerate(active_order_titles):
            Order.objects.create(
                customer=customer,
                performer=user,
                title=title,
                event_type=random.choice(event_types),
                event_date=datetime.now().date() + timedelta(days=random.randint(5, 30)),
                venue=f'–ë–∞–Ω–∫–µ—Ç–Ω—ã–π –∑–∞–ª "{random.choice(["–≠–ª–µ–≥–∞–Ω—Ç", "–õ—é–∫—Å", "–ü—Ä–µ—Å—Ç–∏–∂", "–ì—Ä–∞–Ω–¥", "–≠–∫—Å–∫–ª—é–∑–∏–≤"])}"',
                guest_count=random.randint(30, 100),
                description=f'–ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑: {title}. –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω.',
                budget_min=Decimal(80000 + random.randint(0, 50000)),
                budget_max=Decimal(180000 + random.randint(0, 100000)),
                city=random.choice(cities).name,
                services=[user.service_type.code] if user.service_type else [],
                status=random.choice(['new', 'in_progress']),
                order_type='booking'
            )
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑—ã (5 –æ—Ç–∫–ª–∏–∫–æ–≤)
        print("üí¨ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –∑–∞–∫–∞–∑—ã...")
        OrderResponse.objects.filter(performer=user).delete()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ—Ç–∫–ª–∏–∫–æ–≤
        for i in range(5):
            order = Order.objects.create(
                customer=customer,
                title=f'–ó–∞–∫–∞–∑ –¥–ª—è –æ—Ç–∫–ª–∏–∫–∞ #{i+1}',
                event_type=random.choice(event_types),
                event_date=datetime.now().date() + timedelta(days=random.randint(10, 90)),
                venue=f'–†–µ—Å—Ç–æ—Ä–∞–Ω "{random.choice(["–ó–æ–ª–æ—Ç–æ–π", "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π", "–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç"])}"',
                guest_count=random.randint(20, 150),
                description=f'–ó–∞–∫–∞–∑ –¥–ª—è –æ—Ç–∫–ª–∏–∫–∞ #{i+1}. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—ä–µ–º–∫–∞.',
                budget_min=Decimal(50000 + random.randint(0, 100000)),
                budget_max=Decimal(150000 + random.randint(0, 200000)),
                city=random.choice(cities).name,
                services=random.sample([st.code for st in service_types], random.randint(1, 3)),
                status='new',
                order_type='request'
            )
            
            OrderResponse.objects.create(
                performer=user,
                order=order,
                price=Decimal(random.randint(50000, 150000)),
                message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≥–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑ "{order.title}". –£ –º–µ–Ω—è –±–æ–ª—å—à–æ–π –æ–ø—ã—Ç –≤ –ø–æ–¥–æ–±–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.'
            )
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫–∞–∑—á–∏–∫, —Å–æ–∑–¥–∞–µ–º –¥–ª—è –Ω–µ–≥–æ –∑–∞–∫–∞–∑—ã
    elif user.user_type == 'customer':
        print("üë§ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–∞...")
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–∞
        print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤...")
        order_titles = [
            '–°–≤–∞–¥—å–±–∞ –ê–Ω–Ω—ã –∏ –ú–∏—Ö–∞–∏–ª–∞',
            '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞',
            '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
            '–Æ–±–∏–ª–µ–π –±–∞–±—É—à–∫–∏',
            '–í—ã–ø—É—Å–∫–Ω–æ–π –≤–µ—á–µ—Ä',
            '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
            '–°–µ–º–µ–π–Ω–∞—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è',
            '–ü—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞'
        ]
        
        event_types = ['wedding', 'birthday', 'corporate', 'anniversary', 'graduation', 'proposal', 'family', 'holiday']
        
        for i, title in enumerate(order_titles):
            order = Order.objects.create(
                customer=user,
                title=title,
                event_type=event_types[i % len(event_types)],
                event_date=datetime.now().date() + timedelta(days=random.randint(10, 90)),
                venue=f'–†–µ—Å—Ç–æ—Ä–∞–Ω "{random.choice(["–ó–æ–ª–æ—Ç–æ–π", "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π", "–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç", "–†—É–±–∏–Ω", "–°–∞–ø—Ñ–∏—Ä"])}"',
                guest_count=random.randint(20, 150),
                description=f'–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {title}. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—ä–µ–º–∫–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.',
                budget_min=Decimal(50000 + random.randint(0, 100000)),
                budget_max=Decimal(150000 + random.randint(0, 200000)),
                city=random.choice(cities).name,
                services=random.sample([st.code for st in service_types], random.randint(1, 3)),
                status=random.choice(['new', 'in_progress', 'completed']),
                order_type='request'
            )
            
            # –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑—ã (2-4 –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑)
            for j in range(random.randint(2, 4)):
                other_performer = User.objects.filter(user_type='performer').first()
                if not other_performer:
                    other_performer = User.objects.create_user(
                        username=f'performer_for_responses_{i}_{j}',
                        email=f'performer_responses_{i}_{j}@test.com',
                        password='testpass123',
                        phone_number=f'+7777{random.randint(1000000, 9999999)}',
                        first_name=random.choice(['–ê–Ω–¥—Ä–µ–π', '–î–º–∏—Ç—Ä–∏–π', '–°–µ—Ä–≥–µ–π', '–í–ª–∞–¥–∏–º–∏—Ä', '–ù–∏–∫–æ–ª–∞–π']),
                        last_name=random.choice(['–°–º–∏—Ä–Ω–æ–≤', '–ö–æ–∑–ª–æ–≤', '–ù–æ–≤–∏–∫–æ–≤', '–ú–æ—Ä–æ–∑–æ–≤', '–ü–µ—Ç—Ä–æ–≤']),
                        user_type='performer',
                        city=random.choice(cities),
                        service_type=random.choice(service_types),
                        rating=round(random.uniform(3.5, 5.0), 1)
                    )
                
                OrderResponse.objects.create(
                    performer=other_performer,
                    order=order,
                    price=Decimal(random.randint(30000, 200000)),
                    message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ì–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑ "{title}". –£ –º–µ–Ω—è –µ—Å—Ç—å –æ–ø—ã—Ç –≤ –ø–æ–¥–æ–±–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.'
                )
    
    print("\nüéâ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è +77085446945!")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_full_name()} ({user.user_type})")
    
    if user.user_type == 'performer':
        print(f"üì∏ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ: {Portfolio.objects.filter(user=user).count()} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
        print(f"üí∞ –¢–∞—Ä–∏—Ñ—ã: {Tariff.objects.filter(user=user).count()} —Ç–∞—Ä–∏—Ñ–æ–≤")
        print(f"üìÖ –ó–∞–Ω—è—Ç—ã–µ –¥–∞—Ç—ã: {BusyDate.objects.filter(user=user).count()} –¥–∞—Ç")
        print(f"‚≠ê –û—Ç–∑—ã–≤—ã: {Review.objects.filter(to_user=user).count()} –æ—Ç–∑—ã–≤–æ–≤")
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã: {Order.objects.filter(performer=user).count()} –∑–∞–∫–∞–∑–æ–≤")
        print(f"üí¨ –û—Ç–∫–ª–∏–∫–∏: {OrderResponse.objects.filter(performer=user).count()} –æ—Ç–∫–ª–∏–∫–æ–≤")
    elif user.user_type == 'customer':
        print(f"üìã –ó–∞–∫–∞–∑—ã: {Order.objects.filter(customer=user).count()} –∑–∞–∫–∞–∑–æ–≤")
        print(f"üí¨ –û—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑—ã: {OrderResponse.objects.filter(order__customer=user).count()} –æ—Ç–∫–ª–∏–∫–æ–≤")
    
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ø–æ–ª–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ!")

if __name__ == '__main__':
    fill_user_data() 