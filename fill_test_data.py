#!/usr/bin/env python
import os
import sys
import django
import random
from datetime import datetime, timedelta
from decimal import Decimal

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tsz2.settings')
django.setup()

from main.models import User, City, ServiceType, Order, Portfolio, Tariff, BusyDate, Review, OrderResponse
from django.contrib.auth.hashers import make_password

def create_test_data():
    print("üéØ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —Ç–∏–ø—ã —É—Å–ª—É–≥
    cities = list(City.objects.filter(is_active=True))
    service_types = list(ServiceType.objects.filter(is_active=True))
    
    if not cities or not service_types:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –≥–æ—Ä–æ–¥–æ–≤ –∏–ª–∏ —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è...")
    performer = User.objects.create_user(
        username='test_performer',
        email='performer@test.com',
        password='testpass123',
        phone_number='+77771234567',
        first_name='–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
        last_name='–ü–µ—Ç—Ä–æ–≤',
        user_type='performer',
        city=random.choice(cities),
        service_type=random.choice(service_types),
        company_name='–°—Ç—É–¥–∏—è "–ü—Ä–∞–∑–¥–Ω–∏–∫"',
        bio='–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ —Å 5-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Å–≤–∞–¥–µ–±–Ω–æ–π –∏ —Å–µ–º–µ–π–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –°–æ–∑–¥–∞—é –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –º–æ–º–µ–Ω—Ç—ã –¥–ª—è –≤–∞—à–∏—Ö –æ—Å–æ–±–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π.',
        rating=4.8
    )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞
    print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞...")
    customer = User.objects.create_user(
        username='test_customer',
        email='customer@test.com',
        password='testpass123',
        phone_number='+77776543210',
        first_name='–ú–∞—Ä–∏—è',
        last_name='–ò–≤–∞–Ω–æ–≤–∞',
        user_type='customer',
        city=random.choice(cities),
        bio='–õ—é–±–ª—é –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –¥—Ä—É–∑–µ–π –∏ —Å–µ–º—å–∏.'
    )
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (15 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π)
    print("üì∏ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ...")
    portfolio_photos = [
        'portfolio/customer_portfolio_1.jpg',
        'portfolio/customer_portfolio_2.jpg',
        'portfolio/ChatGPT_Image_16_–∞–ø—Ä._2025_–≥._14_11_02.png',
        'portfolio/customer_portfolio_3.jpg',
        'portfolio/customer_portfolio_4.jpg',
        'portfolio/customer_portfolio_5.jpg',
        'portfolio/customer_portfolio_6.jpg',
        'portfolio/customer_portfolio_7.jpg',
        'portfolio/customer_portfolio_8.jpg',
        'portfolio/customer_portfolio_9.jpg',
        'portfolio/customer_portfolio_10.jpg',
        'portfolio/customer_portfolio_11.jpg',
        'portfolio/customer_portfolio_12.jpg',
        'portfolio/customer_portfolio_13.jpg',
        'portfolio/customer_portfolio_14.jpg',
    ]
    
    for i, photo_path in enumerate(portfolio_photos):
        try:
            Portfolio.objects.create(
                user=performer,
                image=photo_path
            )
        except:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            Portfolio.objects.create(
                user=performer
            )
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞—Ä–∏—Ñ—ã (5 —Ç–∞—Ä–∏—Ñ–æ–≤)
    print("üí∞ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤...")
    tariff_names = [
        '–ë–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞–∫–µ—Ç', 
        '–ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç',
        'VIP –ø–∞–∫–µ—Ç',
        '–°–≤–∞–¥–µ–±–Ω—ã–π –ø–∞–∫–µ—Ç'
    ]
    
    for i, name in enumerate(tariff_names):
        Tariff.objects.create(
            user=performer,
            name=name,
            price=Decimal(50000 + i * 25000),
            description=f'–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞ "{name}". –í–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —Å—ä–µ–º–∫—É, –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –±–∞–∑–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.'
        )
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–Ω—è—Ç—ã–µ –¥–∞—Ç—ã (10 –¥–∞—Ç)
    print("üìÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–Ω—è—Ç—ã—Ö –¥–∞—Ç...")
    busy_dates = []
    for i in range(10):
        date = datetime.now().date() + timedelta(days=random.randint(1, 60))
        if date not in busy_dates:
            BusyDate.objects.create(
                user=performer,
                date=date
            )
            busy_dates.append(date)
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã (8 –∑–∞–∫–∞–∑–æ–≤)
    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤...")
    order_titles = [
        '–°–≤–∞–¥—å–±–∞ –ê–Ω–Ω—ã –∏ –ú–∏—Ö–∞–∏–ª–∞',
        '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞',
        '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
        '–Æ–±–∏–ª–µ–π –±–∞–±—É—à–∫–∏',
        '–í—ã–ø—É—Å–∫–Ω–æ–π –≤–µ—á–µ—Ä',
        '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
        '–°–µ–º–µ–π–Ω–∞—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è',
        '–ü—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞'
    ]
    
    event_types = ['wedding', 'birthday', 'corporate', 'anniversary', 'graduation', 'proposal', 'family', 'holiday']
    
    for i, title in enumerate(order_titles):
        order = Order.objects.create(
            customer=customer,
            title=title,
            event_type=event_types[i % len(event_types)],
            event_date=datetime.now().date() + timedelta(days=random.randint(10, 90)),
            venue=f'–†–µ—Å—Ç–æ—Ä–∞–Ω "{random.choice(["–ó–æ–ª–æ—Ç–æ–π", "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π", "–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç", "–†—É–±–∏–Ω", "–°–∞–ø—Ñ–∏—Ä"])}"',
            guest_count=random.randint(20, 150),
            description=f'–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {title}. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—ä–µ–º–∫–∞ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ.',
            budget_min=Decimal(50000 + random.randint(0, 100000)),
            budget_max=Decimal(150000 + random.randint(0, 200000)),
            city=random.choice(cities).name,
            services=random.sample([st.code for st in service_types], random.randint(1, 3)),
            status=random.choice(['new', 'in_progress', 'completed']),
            order_type='request'
        )
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑—ã (2-4 –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑)
        for j in range(random.randint(2, 4)):
            other_performer = User.objects.create_user(
                username=f'performer_{i}_{j}',
                email=f'performer_{i}_{j}@test.com',
                password='testpass123',
                phone_number=f'+7777{random.randint(1000000, 9999999)}',
                first_name=random.choice(['–ê–Ω–¥—Ä–µ–π', '–î–º–∏—Ç—Ä–∏–π', '–°–µ—Ä–≥–µ–π', '–í–ª–∞–¥–∏–º–∏—Ä', '–ù–∏–∫–æ–ª–∞–π']),
                last_name=random.choice(['–°–º–∏—Ä–Ω–æ–≤', '–ö–æ–∑–ª–æ–≤', '–ù–æ–≤–∏–∫–æ–≤', '–ú–æ—Ä–æ–∑–æ–≤', '–ü–µ—Ç—Ä–æ–≤']),
                user_type='performer',
                city=random.choice(cities),
                service_type=random.choice(service_types),
                rating=round(random.uniform(3.5, 5.0), 1)
            )
            
            OrderResponse.objects.create(
                performer=other_performer,
                order=order,
                price=Decimal(random.randint(30000, 200000)),
                message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ì–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑ "{title}". –£ –º–µ–Ω—è –µ—Å—Ç—å –æ–ø—ã—Ç –≤ –ø–æ–¥–æ–±–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.'
            )
    
    # –°–æ–∑–¥–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è (3 –∑–∞–∫–∞–∑–∞)
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è...")
    active_order_titles = [
        '–°–≤–∞–¥—å–±–∞ –ï–ª–µ–Ω—ã –∏ –î–º–∏—Ç—Ä–∏—è',
        '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤ IT-–∫–æ–º–ø–∞–Ω–∏–∏',
        '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –º–∞–º—ã'
    ]
    
    for i, title in enumerate(active_order_titles):
        Order.objects.create(
            customer=customer,
            performer=performer,
            title=title,
            event_type=random.choice(event_types),
            event_date=datetime.now().date() + timedelta(days=random.randint(5, 30)),
            venue=f'–ë–∞–Ω–∫–µ—Ç–Ω—ã–π –∑–∞–ª "{random.choice(["–≠–ª–µ–≥–∞–Ω—Ç", "–õ—é–∫—Å", "–ü—Ä–µ—Å—Ç–∏–∂", "–ì—Ä–∞–Ω–¥", "–≠–∫—Å–∫–ª—é–∑–∏–≤"])}"',
            guest_count=random.randint(30, 100),
            description=f'–ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑: {title}. –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω.',
            budget_min=Decimal(80000 + random.randint(0, 50000)),
            budget_max=Decimal(180000 + random.randint(0, 100000)),
            city=random.choice(cities).name,
            services=[performer.service_type.code] if performer.service_type else [],
            status=random.choice(['new', 'in_progress']),
            order_type='booking'
        )
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–∫–ª–∏–∫–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –Ω–∞ –∑–∞–∫–∞–∑—ã (5 –æ—Ç–∫–ª–∏–∫–æ–≤)
    print("üí¨ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è...")
    for i in range(5):
        order = Order.objects.filter(status='new', order_type='request').first()
        if order:
            OrderResponse.objects.create(
                performer=performer,
                order=order,
                price=Decimal(random.randint(50000, 150000)),
                message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≥–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑ "{order.title}". –£ –º–µ–Ω—è –±–æ–ª—å—à–æ–π –æ–ø—ã—Ç –≤ –ø–æ–¥–æ–±–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.'
            )
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–∑—ã–≤—ã (8 –æ—Ç–∑—ã–≤–æ–≤)
    print("‚≠ê –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤...")
    review_texts = [
        '–û—Ç–ª–∏—á–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å! –í—Å–µ –±—ã–ª–æ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.',
        '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞. –†–µ–∫–æ–º–µ–Ω–¥—É—é!',
        '–û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º. –°–ø–∞—Å–∏–±–æ!',
        '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –≤—Å–µ –≤ —Å—Ä–æ–∫.',
        '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ, –∫—Ä–∞—Å–∏–≤—ã–µ —Å–Ω–∏–º–∫–∏.',
        '–í–µ–∂–ª–∏–≤—ã–π –∏ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.',
        '–í—Å–µ –ø—Ä–æ—à–ª–æ –∏–¥–µ–∞–ª—å–Ω–æ, —Å–ø–∞—Å–∏–±–æ!',
        '–û—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥.'
    ]
    
    for i in range(8):
        Review.objects.create(
            from_user=customer,
            to_user=performer,
            order=Order.objects.filter(customer=customer).first(),
            rating=random.randint(4, 5),
            comment=review_texts[i % len(review_texts)]
        )
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ (10 –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π)
    print("üë• –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π...")
    for i in range(10):
        performer_name = random.choice(['–ê–Ω–Ω–∞', '–ï–ª–µ–Ω–∞', '–û–ª—å–≥–∞', '–¢–∞—Ç—å—è–Ω–∞', '–ò—Ä–∏–Ω–∞', '–ù–∞—Ç–∞–ª—å—è', '–ú–∞—Ä–∏–Ω–∞', '–°–≤–µ—Ç–ª–∞–Ω–∞', '–Æ–ª–∏—è', '–ê–ª–µ–Ω–∞'])
        performer_surname = random.choice(['–ö—É–∑–Ω–µ—Ü–æ–≤–∞', '–°–æ–∫–æ–ª–æ–≤–∞', '–õ–µ–±–µ–¥–µ–≤–∞', '–ö–æ–∑–ª–æ–≤–∞', '–ù–æ–≤–∏–∫–æ–≤–∞', '–ú–æ—Ä–æ–∑–æ–≤–∞', '–ü–µ—Ç—Ä–æ–≤–∞', '–í–æ–ª–∫–æ–≤–∞', '–°–æ–ª–æ–≤—å–µ–≤–∞', '–í–∞—Å–∏–ª—å–µ–≤–∞'])
        
        new_performer = User.objects.create_user(
            username=f'performer_catalog_{i}',
            email=f'performer_catalog_{i}@test.com',
            password='testpass123',
            phone_number=f'+7777{random.randint(1000000, 9999999)}',
            first_name=performer_name,
            last_name=performer_surname,
            user_type='performer',
            city=random.choice(cities),
            service_type=random.choice(service_types),
            company_name=f'–°—Ç—É–¥–∏—è "{random.choice(["–†–∞–¥–æ—Å—Ç—å", "–£–ª—ã–±–∫–∞", "–°—á–∞—Å—Ç—å–µ", "–ü—Ä–∞–∑–¥–Ω–∏–∫", "–ú–µ—á—Ç–∞"])}"',
            bio=f'–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π {random.choice(["—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ", "–≤–∏–¥–µ–æ–≥—Ä–∞—Ñ", "–º—É–∑—ã–∫–∞–Ω—Ç", "–≤–µ–¥—É—â–∏–π"])} —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã.',
            rating=round(random.uniform(3.8, 5.0), 1)
        )
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞—Ä–∏—Ñ—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
        for j in range(random.randint(1, 3)):
            Tariff.objects.create(
                user=new_performer,
                name=f'–ü–∞–∫–µ—Ç {j+1}',
                price=Decimal(30000 + j * 20000),
                description=f'–û–ø–∏—Å–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ {j+1}'
            )
    
    print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print(f"‚úÖ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {performer.get_full_name()} (–ª–æ–≥–∏–Ω: test_performer, –ø–∞—Ä–æ–ª—å: testpass123)")
    print(f"‚úÖ –ó–∞–∫–∞–∑—á–∏–∫: {customer.get_full_name()} (–ª–æ–≥–∏–Ω: test_customer, –ø–∞—Ä–æ–ª—å: testpass123)")
    print(f"üì∏ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ: {Portfolio.objects.filter(user=performer).count()} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
    print(f"üí∞ –¢–∞—Ä–∏—Ñ—ã: {Tariff.objects.filter(user=performer).count()} —Ç–∞—Ä–∏—Ñ–æ–≤")
    print(f"üìÖ –ó–∞–Ω—è—Ç—ã–µ –¥–∞—Ç—ã: {BusyDate.objects.filter(user=performer).count()} –¥–∞—Ç")
    print(f"üìã –ó–∞–∫–∞–∑—ã: {Order.objects.count()} –∑–∞–∫–∞–∑–æ–≤")
    print(f"üí¨ –û—Ç–∫–ª–∏–∫–∏: {OrderResponse.objects.count()} –æ—Ç–∫–ª–∏–∫–æ–≤")
    print(f"‚≠ê –û—Ç–∑—ã–≤—ã: {Review.objects.count()} –æ—Ç–∑—ã–≤–æ–≤")
    print(f"üë• –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ: {User.objects.filter(user_type='performer').count()}")
    
    print("\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ø–æ–ª–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ!")

if __name__ == '__main__':
    create_test_data() 