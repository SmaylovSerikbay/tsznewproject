#!/usr/bin/env python
import os
import sys
import django
from datetime import datetime, timedelta
from decimal import Decimal
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tsz2.settings')
django.setup()

from main.models import User, Order, City, ServiceType

def add_test_orders():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π"""
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥–∞ –∏ —Ç–∏–ø—ã —É—Å–ª—É–≥
    cities = list(City.objects.filter(is_active=True))
    service_types = list(ServiceType.objects.filter(is_active=True))
    
    if not cities:
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    if not service_types:
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑—á–∏–∫–∞
    customer, created = User.objects.get_or_create(
        phone_number='+77771234567',
        defaults={
            'username': 'test_customer',
            'first_name': '–¢–µ—Å—Ç–æ–≤—ã–π',
            'last_name': '–ó–∞–∫–∞–∑—á–∏–∫',
            'email': 'test_customer@example.com',
            'user_type': 'customer',
            'is_active': True
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑—á–∏–∫: {customer.get_full_name()}")
    else:
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∑–∞–∫–∞–∑—á–∏–∫: {customer.get_full_name()}")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏
    old_orders = Order.objects.filter(customer=customer, title__startswith='–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞')
    if old_orders.exists():
        old_orders.delete()
        print("üóëÔ∏è –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏
    event_types = ['wedding', 'birthday', 'corporate', 'anniversary', 'graduation', 'party']
    event_titles = [
        '–°–≤–∞–¥—å–±–∞ –≤ —Å—Ç–∏–ª–µ "–í–∏–Ω—Ç–∞–∂"',
        '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —Ä–µ–±–µ–Ω–∫–∞',
        '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —É–∂–∏–Ω',
        '–Æ–±–∏–ª–µ–π –±–∞–±—É—à–∫–∏',
        '–í—ã–ø—É—Å–∫–Ω–æ–π –≤–µ—á–µ—Ä',
        '–í–µ—á–µ—Ä–∏–Ω–∫–∞ –≤ —á–µ—Å—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏—è',
        '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π —É–∂–∏–Ω',
        '–ü—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ –∫–≤–∞—Ä—Ç–∏—Ä—ã',
        '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –º–∞–º—ã',
        '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞',
        '–°–≤–∞–¥—å–±–∞ –≤ –º–æ—Ä—Å–∫–æ–º —Å—Ç–∏–ª–µ',
        '–î–µ—Ç—Å–∫–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫',
        '–í—Å—Ç—Ä–µ—á–∞ –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤',
        '–ü—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ –≥–æ–¥–æ–≤—â–∏–Ω—ã',
        '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø–∞–ø—ã'
    ]
    
    venues = [
        '–†–µ—Å—Ç–æ—Ä–∞–Ω "–ó–æ–ª–æ—Ç–æ–π"',
        '–ö–∞—Ñ–µ "–£—é—Ç–Ω–æ–µ"',
        '–ë–∞–Ω–∫–µ—Ç–Ω—ã–π –∑–∞–ª "–ü—Ä–µ—Å—Ç–∏–∂"',
        '–†–µ—Å—Ç–æ—Ä–∞–Ω "–ú–æ—Ä—Å–∫–æ–π"',
        '–ö–∞—Ñ–µ "–°–æ–ª–Ω–µ—á–Ω–æ–µ"',
        '–ë–∞–Ω–∫–µ—Ç–Ω—ã–π –∑–∞–ª "–≠–ª–∏—Ç"',
        '–†–µ—Å—Ç–æ—Ä–∞–Ω "–°—Ç–∞—Ä—ã–π –≥–æ—Ä–æ–¥"',
        '–ö–∞—Ñ–µ "–í–µ—Å–Ω–∞"',
        '–ë–∞–Ω–∫–µ—Ç–Ω—ã–π –∑–∞–ª "–õ—é–∫—Å"',
        '–†–µ—Å—Ç–æ—Ä–∞–Ω "–ü–∞–Ω–æ—Ä–∞–º–∞"'
    ]
    
    orders_created = 0
    
    for i in range(20):  # –°–æ–∑–¥–∞–µ–º 20 —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫
        # –°–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–∏–µ 3 –º–µ—Å—è—Ü–∞
        days_from_now = random.randint(1, 90)
        event_date = datetime.now().date() + timedelta(days=days_from_now)
        
        # –°–ª—É—á–∞–π–Ω—ã–π —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        event_type = random.choice(event_types)
        
        # –°–ª—É—á–∞–π–Ω—ã–π –≥–æ—Ä–æ–¥
        city = random.choice(cities)
        
        # –°–ª—É—á–∞–π–Ω—ã–π —Ç–∏–ø —É—Å–ª—É–≥–∏
        service_type = random.choice(service_types)
        
        # –°–ª—É—á–∞–π–Ω—ã–π –±—é–¥–∂–µ—Ç
        budget_min = Decimal(random.randint(20000, 100000))
        budget_max = budget_min + Decimal(random.randint(10000, 50000))
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É
        order = Order.objects.create(
            customer=customer,
            title=f"–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #{i+1}: {random.choice(event_titles)}",
            event_type=event_type,
            event_date=event_date,
            venue=random.choice(venues),
            guest_count=random.randint(10, 150),
            description=f"–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏. –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: {event_type}. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.",
            budget_min=budget_min,
            budget_max=budget_max,
            city=city.name,
            services=[service_type.code],
            status='new',
            order_type='request'
        )
        
        orders_created += 1
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞: {order.title} ({city.name}, {service_type.name})")
    
    print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ {orders_created} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   - –ó–∞–∫–∞–∑—á–∏–∫: {customer.get_full_name()}")
    print(f"   - –ì–æ—Ä–æ–¥–∞: {', '.join(set([order.city for order in Order.objects.filter(customer=customer, title__startswith='–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞')]))}")
    print(f"   - –¢–∏–ø—ã —É—Å–ª—É–≥: {', '.join(set([service_type.name for service_type in service_types]))}")
    print(f"   - –ë—é–¥–∂–µ—Ç: –æ—Ç {min([order.budget_min for order in Order.objects.filter(customer=customer, title__startswith='–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞')])} –¥–æ {max([order.budget_max for order in Order.objects.filter(customer=customer, title__startswith='–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞')])} ‚Ç∏")

if __name__ == '__main__':
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞—è–≤–æ–∫...")
    add_test_orders()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!") 