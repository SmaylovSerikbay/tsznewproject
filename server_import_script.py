#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
"""

import os
import sys
import django
import json
from PIL import Image, ImageOps
import io

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tsz2.settings')
django.setup()

from main.models import City, ServiceType, User, Portfolio
from django.contrib.auth.hashers import make_password
from django.core.files import File

def fix_image_orientation(image_path):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ EXIF"""
    try:
        img = Image.open(image_path)
        img = ImageOps.exif_transpose(img)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if img.mode != 'RGB':
            img = img.convert('RGB')
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        output = io.BytesIO()
        img.save(output, format='JPEG', quality=85, optimize=True)
        output.seek(0)
        
        return output
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ {image_path}: {e}")
        return None

def import_data():
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ò–º–ø–æ—Ä—Ç –≥–æ—Ä–æ–¥–æ–≤
    print("\nüìç –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≥–æ—Ä–æ–¥–∞...")
    try:
        with open('cities.json', 'r', encoding='utf-8') as f:
            cities_data = json.load(f)
        
        for city_data in cities_data:
            city, created = City.objects.get_or_create(
                name=city_data['name'],
                defaults={
                    'is_active': city_data.get('is_active', True),
                    'created_at': city_data.get('created_at')
                }
            )
            if created:
                print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –≥–æ—Ä–æ–¥: {city.name}")
            else:
                print(f"  ‚ö†Ô∏è –ì–æ—Ä–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {city.name}")
    except FileNotFoundError:
        print("  ‚ùå –§–∞–π–ª cities.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥
    print("\nüîß –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã —É—Å–ª—É–≥...")
    try:
        with open('service_types.json', 'r', encoding='utf-8') as f:
            service_types_data = json.load(f)
        
        for service_data in service_types_data:
            service, created = ServiceType.objects.get_or_create(
                name=service_data['name'],
                defaults={
                    'is_active': service_data.get('is_active', True),
                    'created_at': service_data.get('created_at')
                }
            )
            if created:
                print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∏–ø —É—Å–ª—É–≥–∏: {service.name}")
            else:
                print(f"  ‚ö†Ô∏è –¢–∏–ø —É—Å–ª—É–≥–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {service.name}")
    except FileNotFoundError:
        print("  ‚ùå –§–∞–π–ª service_types.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ò–º–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("\nüë• –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    try:
        with open('users.json', 'r', encoding='utf-8') as f:
            users_data = json.load(f)
        
        for user_data in users_data:
            user, created = User.objects.get_or_create(
                username=user_data['username'],
                defaults={
                    'email': user_data.get('email', ''),
                    'first_name': user_data.get('first_name', ''),
                    'last_name': user_data.get('last_name', ''),
                    'phone': user_data.get('phone', ''),
                    'user_type': user_data.get('user_type', 'customer'),
                    'is_active': user_data.get('is_active', True),
                    'is_staff': user_data.get('is_staff', False),
                    'is_superuser': user_data.get('is_superuser', False),
                    'date_joined': user_data.get('date_joined'),
                    'last_login': user_data.get('last_login')
                }
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
            if created:
                user.password = make_password(user_data.get('password', 'password123'))
                user.save()
                print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
            else:
                print(f"  ‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {user.username}")
    except FileNotFoundError:
        print("  ‚ùå –§–∞–π–ª users.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ò–º–ø–æ—Ä—Ç –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
    print("\nüñºÔ∏è –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ...")
    try:
        with open('portfolio.json', 'r', encoding='utf-8') as f:
            portfolio_data = json.load(f)
        
        for item_data in portfolio_data:
            try:
                user = User.objects.get(username=item_data['user'])
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
                existing_item = Portfolio.objects.filter(
                    user=user,
                    media_type=item_data.get('media_type', 'image')
                ).first()
                
                if existing_item:
                    print(f"  ‚ö†Ô∏è –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username}")
                    continue
                
                portfolio = Portfolio.objects.create(
                    user=user,
                    media_type=item_data.get('media_type', 'image'),
                    title=item_data.get('title', ''),
                    description=item_data.get('description', ''),
                    created_at=item_data.get('created_at')
                )
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª
                if item_data.get('media_type') == 'video':
                    video_path = f"media/{item_data['video']}"
                    if os.path.exists(video_path):
                        with open(video_path, 'rb') as f:
                            portfolio.video.save(os.path.basename(video_path), File(f), save=False)
                        print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤–∏–¥–µ–æ –¥–ª—è: {user.username}")
                else:
                    image_path = f"media/{item_data['image']}"
                    if os.path.exists(image_path):
                        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        fixed_image = fix_image_orientation(image_path)
                        if fixed_image:
                            portfolio.image.save(os.path.basename(image_path), File(fixed_image), save=False)
                            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–µ–π) –¥–ª—è: {user.username}")
                        else:
                            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
                            with open(image_path, 'rb') as f:
                                portfolio.image.save(os.path.basename(image_path), File(f), save=False)
                            print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: {user.username}")
                
                portfolio.save()
                
            except User.DoesNotExist:
                print(f"  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω: {item_data['user']}")
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: {e}")
                
    except FileNotFoundError:
        print("  ‚ùå –§–∞–π–ª portfolio.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\n‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == '__main__':
    import_data()
