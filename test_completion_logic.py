#!/usr/bin/env python
import os
import sys
import django
from datetime import date, timedelta
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tsz2.settings')
django.setup()

from main.models import User, Order, BusyDate, Tariff

def test_completion_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –¥–∞—Ç—ã –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –¥–∞—Ç—ã –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        customer = User.objects.filter(user_type='customer').first()
        performer = User.objects.filter(user_type='performer', service_type__code='star').first()
        
        if not customer:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        if not performer:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
            
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫: {customer.get_full_name()}")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {performer.get_full_name()}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞—Ä–∏—Ñ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    try:
        tariff = Tariff.objects.filter(user=performer).first()
        if not tariff:
            tariff = Tariff.objects.create(
                user=performer,
                name='–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ',
                price=Decimal('50000'),
                description='–¢–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏'
            )
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ: {tariff.name} - {tariff.price} ‚Ç∏")
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç–∞—Ä–∏—Ñ: {tariff.name} - {tariff.price} ‚Ç∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ç–∞—Ä–∏—Ñ–æ–º: {e}")
        return
    
    # –¢–µ—Å—Ç 1: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –±—É–¥—É—â–µ–π –¥–∞—Ç–æ–π (–¥–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è)
    print("\nüìã –¢–µ—Å—Ç 1: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –±—É–¥—É—â–µ–π –¥–∞—Ç–æ–π")
    try:
        future_date = date.today() + timedelta(days=5)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç–µ —Å –±—É–¥—É—â–µ–π –¥–∞—Ç–æ–π
        order_future = Order.objects.create(
            customer=customer,
            performer=performer,
            title=f'–ó–∞–∫–∞–∑ —Å –±—É–¥—É—â–µ–π –¥–∞—Ç–æ–π',
            event_type='wedding',
            event_date=future_date,
            city=performer.city.name if performer.city else '–ê–ª–º–∞—Ç—ã',
            venue='–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ª',
            guest_count=50,
            description='–ó–∞–∫–∞–∑ —Å –±—É–¥—É—â–µ–π –¥–∞—Ç–æ–π',
            budget_min=tariff.price,
            budget_max=tariff.price,
            services=[],
            tariff=tariff,
            details='–¢–µ—Å—Ç–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏',
            order_type='booking',
            status='in_progress'
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑: {order_future.title} –Ω–∞ {future_date}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –≤ –∑–∞–Ω—è—Ç—ã–µ
        if not BusyDate.objects.filter(user=performer, date=future_date).exists():
            BusyDate.objects.create(user=performer, date=future_date)
            print(f"   ‚úÖ –î–∞—Ç–∞ {future_date} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∑–∞–Ω—è—Ç—ã–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –∑–∞–Ω—è—Ç–∞
        busy_date = BusyDate.objects.filter(user=performer, date=future_date).first()
        if busy_date:
            print(f"   ‚úÖ –î–∞—Ç–∞ {future_date} –∑–∞–Ω—è—Ç–∞")
        else:
            print(f"   ‚ùå –î–∞—Ç–∞ {future_date} –ù–ï –∑–∞–Ω—è—Ç–∞")
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–∫–∞–∑
        order_future.status = 'completed'
        order_future.save()
        print(f"‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω (—Å—Ç–∞—Ç—É—Å: {order_future.status})")
        
        # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –¥–∞—Ç—É (–∏–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ complete_order_api)
        if order_future.event_date >= date.today():
            BusyDate.objects.filter(
                user=performer, 
                date=order_future.event_date
            ).delete()
            print(f"   ‚úÖ –î–∞—Ç–∞ {future_date} –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞ (–±—É–¥—É—â–∞—è –¥–∞—Ç–∞)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞
        busy_date = BusyDate.objects.filter(user=performer, date=future_date).first()
        if not busy_date:
            print(f"   ‚úÖ –î–∞—Ç–∞ {future_date} –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
        else:
            print(f"   ‚ùå –î–∞—Ç–∞ {future_date} –≤—Å–µ –µ—â–µ –∑–∞–Ω—è—Ç–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±—É–¥—É—â–µ–π –¥–∞—Ç—ã: {e}")
    
    # –¢–µ—Å—Ç 2: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –ø—Ä–æ—à–µ–¥—à–µ–π –¥–∞—Ç–æ–π (–¥–∞—Ç–∞ –ù–ï –¥–æ–ª–∂–Ω–∞ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å—Å—è)
    print("\nüìã –¢–µ—Å—Ç 2: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –ø—Ä–æ—à–µ–¥—à–µ–π –¥–∞—Ç–æ–π")
    try:
        past_date = date.today() - timedelta(days=1)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–æ—à–µ–¥—à–µ–π –¥–∞—Ç–æ–π
        order_past = Order.objects.create(
            customer=customer,
            performer=performer,
            title=f'–ó–∞–∫–∞–∑ —Å –ø—Ä–æ—à–µ–¥—à–µ–π –¥–∞—Ç–æ–π',
            event_type='wedding',
            event_date=past_date,
            city=performer.city.name if performer.city else '–ê–ª–º–∞—Ç—ã',
            venue='–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ª',
            guest_count=50,
            description='–ó–∞–∫–∞–∑ —Å –ø—Ä–æ—à–µ–¥—à–µ–π –¥–∞—Ç–æ–π',
            budget_min=tariff.price,
            budget_max=tariff.price,
            services=[],
            tariff=tariff,
            details='–¢–µ—Å—Ç–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏',
            order_type='booking',
            status='in_progress'
        )
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑: {order_past.title} –Ω–∞ {past_date}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –≤ –∑–∞–Ω—è—Ç—ã–µ
        if not BusyDate.objects.filter(user=performer, date=past_date).exists():
            BusyDate.objects.create(user=performer, date=past_date)
            print(f"   ‚úÖ –î–∞—Ç–∞ {past_date} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∑–∞–Ω—è—Ç—ã–µ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –∑–∞–Ω—è—Ç–∞
        busy_date = BusyDate.objects.filter(user=performer, date=past_date).first()
        if busy_date:
            print(f"   ‚úÖ –î–∞—Ç–∞ {past_date} –∑–∞–Ω—è—Ç–∞")
        else:
            print(f"   ‚ùå –î–∞—Ç–∞ {past_date} –ù–ï –∑–∞–Ω—è—Ç–∞")
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–∫–∞–∑
        order_past.status = 'completed'
        order_past.save()
        print(f"‚úÖ –ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω (—Å—Ç–∞—Ç—É—Å: {order_past.status})")
        
        # –ù–ï –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –¥–∞—Ç—É (–∏–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ complete_order_api)
        if order_past.event_date >= date.today():
            BusyDate.objects.filter(
                user=performer, 
                date=order_past.event_date
            ).delete()
            print(f"   ‚ùå –î–∞—Ç–∞ {past_date} –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞ (–ø—Ä–æ—à–µ–¥—à–∞—è –¥–∞—Ç–∞) - –ù–ï –î–û–õ–ñ–ù–ê!")
        else:
            print(f"   ‚úÖ –î–∞—Ç–∞ {past_date} –ù–ï –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞ (–ø—Ä–æ—à–µ–¥—à–∞—è –¥–∞—Ç–∞) - –ü–†–ê–í–ò–õ–¨–ù–û!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –∑–∞–Ω—è—Ç–æ–π
        busy_date = BusyDate.objects.filter(user=performer, date=past_date).first()
        if busy_date:
            print(f"   ‚úÖ –î–∞—Ç–∞ {past_date} –æ—Å—Ç–∞–µ—Ç—Å—è –∑–∞–Ω—è—Ç–æ–π –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
        else:
            print(f"   ‚ùå –î–∞—Ç–∞ {past_date} –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—à–µ–¥—à–µ–π –¥–∞—Ç—ã: {e}")
    
    print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("‚úÖ –ë—É–¥—É—â–∏–µ –¥–∞—Ç—ã –æ—Å–≤–æ–±–æ–∂–¥–∞—é—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞")
    print("‚úÖ –ü—Ä–æ—à–µ–¥—à–∏–µ –¥–∞—Ç—ã –ù–ï –æ—Å–≤–æ–±–æ–∂–¥–∞—é—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞")
    print("‚úÖ –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    test_completion_logic() 